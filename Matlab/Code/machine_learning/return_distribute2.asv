% fit criteria
% 1-level data distance
% 2-velocity data distance
% 3-extreme point data distance
% 4- relative rank of each point within the pattern
% 5- difference between two end points
% how to combine different criteria
% how to set how many to choose

% function[rebalance_current_day,rebalance_test_next_ret,rebalance_train_ret,rebalance_train_std,rebalance_train_wl,rebalance_train_omega,fit_np_ret,fit_np_max]=return_distribute2(rtn_Y,disp_col,z_px,z_turnover_mov,z_disp_mov,tday1)
%% Calculate inputs
% X=z_px;
% Y=z_turnover_mov;
% Z=z_disp_mov;

X=z_disp_mov;
% X_ve=[0;diff(X)./X(2:end)];%X is zscore based,denominator could be positive, velocity could be wrong
X_ve=[0;diff(disp_col)./disp_col(2:end)];%velocity

%% Initialize parameters
% char_date=datestr(tday1);
% c_date=cellstr(char_date);
ex_date=m2xdate(tday1,0);
M=2500; %lookback_window
N=5; %rebalance_window
l_pattern=15;%length of pattern
l_np=10; %length of next period
n_testp=1; %n of test pattern
nob=size(rtn_Y,1);

prc1=20; %distance between dispersion
prc2=100; %distance between velocity of dispersion
prc3=100; %distance between relative rank of dispersion
prc4=100; %position difference of max point
prc5=100; %position difference of min point
prc6=10; %degree difference between slope of starting point to end point


       
n_group=floor(M/l_pattern); %training data
adj_M=n_group*l_pattern;
lim_rebalance=ceil((nob-adj_M)/N);

rebalance_train_ret=[];
rebalance_train_std=[];
rebalance_train_wl=[];
rebalance_train_omega=[];
rebalance_distance=[];
rebalance_test_next_ret=[];

rebalance_current_day=[];

rebalance_test_X=[];
rebalance_test_X_ve=[];

cell_train_next_ret=cell(1,lim_rebalance);

count_rebalance=0;
t=nob-l_pattern; %start date of latest pattern
% while t>=adj_M
  count_rebalance=count_rebalance+1;
  rebalance_current_day=[rebalance_current_day;ex_date(t+l_pattern)]; %end day of the pattern
  pattern_dates=reshape(tday1(t-adj_M+1:t,1),l_pattern,n_group);
  pattern_X=reshape(X(t-adj_M+1:t,1),l_pattern,n_group); %reshape function reshape by column
  pattern_X_ve=reshape(X_ve(t-adj_M+1:t,1),l_pattern,n_group);
  
  v_train_next_ret=zeros(1,n_group);
  v_train_next_max=zeros(1,n_group);
  v_train_next_volume=zeros(1,n_group);
  v_start_date=zeros(1,n_group);
  count_group=0;
  for t1=t-adj_M:l_pattern:t-l_pattern
      count_group=count_group+1;
      v_start_date(count_group)=tday1(t1);
      v_train_next_ret(count_group)=sum(rtn_Y(t1+l_pattern+1:t1+l_pattern+l_np,1));
      v_train_next_max(count_group)=max(abs(rtn_Y(t1+l_pattern+1:t1+l_pattern+l_np,1)));
      v_train_next_volume(count_group)=mean(z_turnover_mov(t1+l_pattern+1:t1+l_pattern+l_np,1));
  end
  
  test_X=X(t+1:t+n_testp*l_pattern);
  test_X_ve=X_ve(t+1:t+n_testp*l_pattern);
  
  rebalance_test_X=[rebalance_test_X test_X];
  rebalance_test_X_ve=[rebalance_test_X_ve test_X_ve];
  
  if t<=nob-l_pattern-l_np
     temp_next_ret=rtn_Y(t+1+l_pattern:t+l_pattern+l_np,1);
     test_next_ret=sum(temp_next_ret);
     rebalance_test_next_ret=[rebalance_test_next_ret;test_next_ret];
  end
  
  % calculate matching criterie
  
  %3-1 find relative rank of each point in pattern_X
  pattern_X_rank=zeros(l_pattern,n_group);
  for i=1:n_group
      sorted_pattern_X = sort(pattern_X(:,i));
      for r=1:l_pattern
          pattern_X_rank(r,i)=find(pattern_X(:,i)==sorted_pattern_X(r));
      end
  end    
  
  %3-2 find relative rank of each point in test_X
  test_X_rank=zeros(l_pattern,1);
  [sorted_test_X,~] = sort(test_X);
  for r=1:l_pattern
      test_X_rank(r)=find(test_X==sorted_test_X(r));
  end
  
  %4&5-1.calculate max point and min point in train_X
  v_imaxtrain=zeros(1,n_group);
  v_imintrain=zeros(1,n_group);
  for i=1:n_group
      [maxtrain_X,v_imaxtrain(i)]=max(pattern_X(:,i));
      [mintrain_X,v_imintrain(i)]=min(pattern_X(:,i));
  end
  %4&5-2.find maxmum and min point in text_X
  [maxtest_X,imaxtest_X]=max(test_X);
  [mintest_X,imintest_X]=min(test_X);
  
  %6. calculate shape related degree
  start_max_test=test_X(1)-test_X(imaxtest_X);
  v_degree_start_end_train=zeros(1,n_group);
  
  degree_start_end_test=atand((test_X(1)-test_X(end))/l_pattern);
  for i=1:n_group
      start_max_train=pattern_X(1,i)-pattern_X(v_imaxtrain(i),i);
      v_degree_start_end_train(1,i)=atand((pattern_X(1,i)-pattern_X(end,i))/l_pattern);
  end
  
  
  % calculate distance or difference
  distance_X=pattern_X-repmat(test_X,1,n_group);
  distance_X_ve=pattern_X_ve-repmat(test_X_ve,1,n_group);
  distance_X_rank=pattern_X_rank-repmat(test_X_rank,1,n_group);
  v_distance_X=zeros(1,n_group);
  v_distance_X_ve=zeros(1,n_group);
  v_distance_X_rank=zeros(1,n_group);
  v_diff_degree_start_end=zeros(1,n_group);
  v_diff_max_loc=zeros(1,n_group);
  v_diff_min_loc=zeros(1,n_group);
  for i=1:n_group
      v_distance_X(i)=sumsqr(distance_X(:,i));
      v_distance_X_ve(i)=sumsqr(distance_X_ve(:,i));
      v_distance_X_rank(i)=sumsqr(distance_X_rank(:,i));
      v_diff_max_loc(i)=abs(v_imaxtrain(i)-imaxtest_X);
      v_diff_min_loc(i)=abs(v_imintrain(i)-imintest_X);
      v_diff_degree_start_end(1,i)=abs(v_degree_start_end_train(1,i)-degree_start_end_test);
  end
      
  
  
  % find matching pattern on certain TH
  TH_idx=[];
  TH_distance_X=prctile(v_distance_X,prc1);
  TH_distance_X_ve=prctile(v_distance_X_ve,prc2);
  TH_distance_X_rank=prctile(v_distance_X_rank,prc3);
  TH_max_loc=prctile(v_diff_max_loc,prc4);
  TH_min_loc=prctile(v_diff_min_loc,prc5);
  TH_diff_degree_start_end=prctile(v_diff_degree_start_end,prc6);
  
  for i=1:n_group
      if distance_X(i)<=TH_distance_X && distance_X_ve(i)<=TH_distance_X_ve ...
         && distance_X_rank(i)<=TH_distance_X_rank ...
         && v_diff_max_loc(i)<=TH_max_loc && v_diff_min_loc(i)<=TH_min_loc ...
         && v_diff_degree_start_end(i)<=TH_diff_degree_start_end
         TH_idx=[TH_idx i];
      end
  end
  

  %caculate return distribution of fitted patterns    
  lookback_fit_date=pattern_dates(:,TH_idx);
  lookback_fit=pattern_X(:,TH_idx);
  
  fit_np_max=v_train_next_max(TH_idx);
  fit_np_volume=v_train_next_volume(TH_idx);
  exp_volume=mean(fit_np_volume);
  
  fit_np_ret=v_train_next_ret(TH_idx);
  exp_ret=mean(fit_np_ret);
  exp_vol=std(fit_np_ret);
  
  %classify return by return
  upside_np_ret=fit_np_ret(fit_np_ret>0);
  downside_np_ret=fit_np_ret(fit_np_ret<=0);
  %classify volume by return
  upside_np_volume=fit_np_volume(fit_np_ret>0);
  downside_np_volume=fit_np_volume(fit_np_ret<=0);
  
  nwin=size(upside_np_ret,2);
  exp_win_ret=mean(upside_np_ret);
  exp_win_std=std(upside_np_ret);
  exp_win_volume=mean(upside_np_volume);
  
  nloss=size(downside_np_ret,2);
  exp_loss_ret=mean(downside_np_ret);
  exp_loss_std=std(downside_np_ret);
  exp_loss_volume=mean(downside_np_volume);
  
  exp_wl=nwin/size(fit_np_ret,2);
  exp_omega=sum(upside_np_ret)/(-sum(downside_np_ret)+sum(upside_np_ret));     
  
  %classify return by volume
  big_np_ret=fit_np_ret(fit_np_volume>0);
  small_np_ret=fit_np_ret(fit_np_volume<=0);
  %classify volume by volume
  big_np_volume=fit_np_volume(fit_np_volume>0);
  small_np_volume=fit_np_volume(fit_np_volume<=0);
  
  nbig=size(big_np_ret,2);
  exp_big_ret=mean(big_np_ret);
  exp_big_std=std(big_np_ret);
  exp_big_volume=mean(big_np_volume);
  
  nsmall=size(small_np_ret,2);
  exp_small_ret=mean(small_np_ret);
  exp_small_std=std(small_np_ret);
  exp_loss_volume=mean(small_np_volume);
  
  rebalance_distance=[rebalance_distance; temp_distance];
  rebalance_train_wl=[rebalance_train_wl;exp_wl];
  rebalance_train_omega=[rebalance_train_omega;exp_omega];
  rebalance_train_ret=[rebalance_train_ret;exp_wl];
  rebalance_train_std=[rebalance_train_std;exp_omega];
  
  new_output=[exp_ret;exp_vol;exp_wl;exp_omega;exp_volume];
  new_win_output=[nwin;exp_win_ret;exp_win_std;exp_win_volume];
  new_loss_output=[nloss;exp_loss_ret;exp_loss_std;exp_loss_volume];
%   t=t-N;
% end

%scatter chart of next period return distribution
% scatter(fit_np_ret,fit_np_max)
% xlabel('np return');
% ylabel('np max');
% title(strcat('next ', num2str(l_pattern),'day return distribution'));
% y_mu=mean(fit_np_max);
% hline = refline([0 y_mu]);
% hline.Color = 'r';
% x_mu=mean(fit_np_ret);
% yl = ylim;
% line([x_mu x_mu], [yl(1) yl(2)],'Color','r');

%3D chart of px, volume and dispersion
% plot3(test_X,test_Y,test_Z);
% xlabel('z disp move');
% ylabel('z px');
% zlabel('z turnover');

% fitting chart
plot(tday1,X,'color','k')%black
hold on
plot(tday1(end-l_pattern+1:end),X(end-l_pattern+1:end),'color','g','LineWidth',1.5)
hold on
plot(lookback_fit_date,lookback_fit,'color','r','LineWidth',1.5)
datetick('x','mmmyy','keepticks')
hold off